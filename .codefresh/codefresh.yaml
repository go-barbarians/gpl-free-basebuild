version: '1.0'
steps:
  prepare:
    title: prepare packages
    description: Gets the latest packages
    image: ubuntu:16.04
    commands: 
      - apt-get update && apt-get upgrade -y && apt-get install -y wget build-essential git libncurses5-dev groff-base g++ flex g++-multilib bison python-pip xutils-dev bzip2
      - pip install awscli
      - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - aws configure set default.region eu-west-1

      # clean directories
      - rm -rf /codefresh/volume/gpl-free-basebuild/target/sysroot/usr/local

      # Musl Cross compiler chain
      - rm -rf musl-cross-make
      - git clone https://github.com/richfelker/musl-cross-make
      - bash -c 'pushd musl-cross-make; TARGET=x86_64-linux-musl make; TARGET=x86_64-linux-musl make install; popd'

      # Musl GCC wrapper
      - mkdir -p musl
      - cd musl; aws s3 cp s3://mvn.barbarians.io/build-deps/musl/musl-1.1.20.tar.gz .; cd ..
      - bash -c "pushd musl; tar xzf musl-1.1.20.tar.gz; popd"
      - bash -c 'pushd musl/musl-1.1.20; CC="gcc" ./configure --prefix=/codefresh/volume/gpl-free-basebuild/target/sysroot CFLAGS="-fPIC" LDFLAGS="-fPIC"; make clean; make; make install; popd'
      - bash -c 'pushd musl/musl-1.1.20; CC="gcc" ./configure CFLAGS="-fPIC" LDFLAGS="-fPIC"; make; make install; popd'

      # Kernel Headers
      - rm -rf kernel-headers; git clone https://github.com/sabotage-linux/kernel-headers.git 
      - bash -c 'SYSROOT=/codefresh/volume/gpl-free-basebuild; pushd kernel-headers; PATH=$PATH:$SYSROOT/target/sysroot/bin make ARCH=x86_64 DESTDIR=$SYSROOT/target/sysroot CC="$SYSROOT/musl-cross-make/output/bin/x86_64-linux-musl-gcc -static" install; popd'

      # Zlib
      - bash -c 'mkdir zlib; pushd zlib; aws s3 cp s3://mvn.barbarians.io/build-deps/zlib/zlib-1.2.11.tar.gz .; tar xzf zlib-1.2.11.tar.gz; popd'
      - bash -c 'SYSROOT=/codefresh/volume/gpl-free-basebuild; pushd zlib/zlib-1.2.11; CC="$SYSROOT/musl-cross-make/output/bin/x86_64-linux-musl-gcc" ./configure --prefix=$SYSROOT/target/sysroot; make; make install; popd'

      # Mir Korn Shell
      - mkdir -p $(pwd)/mksh
      - cd mksh; aws s3 cp s3://mvn.barbarians.io/build-deps/mksh/mksh-R56c.tgz .; cd ..
      - cd mksh; tar xzf mksh-R56c.tgz; cd ..
      - bash -c 'SYSROOT=/codefresh/volume/gpl-free-basebuild; pushd mksh/mksh; chmod +x Build.sh; PATH=$PATH:$SYSROOT/target/sysroot/bin CC="$SYSROOT/musl-cross-make/output/bin/x86_64-linux-musl-gcc -static" ./Build.sh; cp mksh $SYSROOT/target/sysroot/bin; popd'

      # Preparatory
      - mkdir -p $(pwd)/python
      - cd python; aws s3 cp s3://mvn.barbarians.io/build-deps/python/Python-2.7.13.tgz .; cd ..
      - cd python; tar xzf Python-2.7.13.tgz; cd ..
      - mv /usr/include/x86_64-linux-gnu /usr/include/x86_64-linux-gnu.temp
      - mkdir -p /work/barbarians/base-image/target/sysroot
      - mkdir -p /work/barbarians/base-image/ncurses
      - aws s3 cp s3://mvn.barbarians.io/build-deps/ncurses/ncursesw.tar.gz /work/barbarians/base-image/ncurses
      - bash -c 'pushd /work/barbarians/base-image/ncurses; tar xzf ncursesw.tar.gz; popd'
      - ln -s /codefresh/volume/gpl-free-basebuild/target/sysroot/include/zlib.h /usr/include/zlib.h
      - ln -s /codefresh/volume/gpl-free-basebuild/target/sysroot/lib/libz.so.1 /usr/local/lib/libz.so.1
      - bash -c 'mkdir -p /work/barbarians/base-image/target/sysroot/usr/bin'
      - bash -c 'mkdir -p /work/barbarians/base-image/target/sysroot/usr/lib'
      - bash -c 'mkdir -p /work/barbarians/base-image/target/sysroot/usr/ucb'

      # LibFFI
      - bash -c 'mkdir -p libffi; pushd libffi; aws s3 cp s3://mvn.barbarians.io/build-deps/libffi/libffi-3.2.1.tar.gz .; popd'
      - bash -c 'pushd libffi; tar xzf libffi-3.2.1.tar.gz; popd;'
      - bash -c 'unlink /lib/cpp; ln -s /codefresh/volume/gpl-free-basebuild/musl-cross-make/output/bin/x86_64-linux-musl-cpp /lib/cpp'
      - bash -c 'export SYSROOT=/codefresh/volume/gpl-free-basebuild; pushd libffi/libffi-3.2.1; CC="$SYSROOT/musl-cross-make/output/bin/x86_64-linux-musl-gcc" ./configure --host=x86_64-linux-musl --prefix=$SYSROOT/target/sysroot; make; make install; popd'
     
      - bash -c 'pushd /work/barbarians/base-image/target/sysroot/usr; ln -s /codefresh/volume/gpl-free-basebuild/target/sysroot/usr/local local; popd'
      - bash -c 'pushd /work/barbarians/base-image/target/sysroot/usr; ln -s /usr/bin/install /work/barbarians/base-image/target/sysroot/usr/ucb/install; popd'

      # NCurses
      - bash -c 'pushd ncurses; aws s3 cp s3://mvn.barbarians.io/build-deps/ncurses/ncurses.tar.gz .; tar xzf ncurses.tar.gz; popd;'
      - bash -c 'unlink /usr/bin/gcc; ln -s /codefresh/volume/gpl-free-basebuild/musl-cross-make/output/bin/x86_64-linux-musl-gcc /usr/bin/gcc'
      - bash -c 'pushd ncurses/ncurses-6.1-20180929; export SYSROOT=/codefresh/volume/gpl-free-basebuild; CC="$SYSROOT/target/sysroot/bin/musl-gcc" CFLAGS="-I$SYSROOT/kernel-headers/x86_64/include -fPIC" LDFLAGS="-fPIC" ./configure --host=x86_64-linux-musl; make clean; make; make install; popd'
      # ugly hack follows...otherwise gnu glibc on the build host breaks
      - bash -c 'pushd ncurses/ncurses-6.1-20180929; export SYSROOT=/codefresh/volume/gpl-free-basebuild; CC="$SYSROOT/target/sysroot/bin/musl-gcc" CFLAGS="-I$SYSROOT/kernel-headers/x86_64/include -fPIC" LDFLAGS="-fPIC" ./configure --host=x86_64-linux-musl --prefix=$SYSROOT/target/sysroot --with-shared; cp /lib/x86_64-linux-gnu/libc.so.6 /usr/lib/x86_64-linux-gnu/libc.so; make clean; make; make install; popd'

      # OpenSSL
      - bash -c 'rm -rf openssl; git clone https://github.com/openssl/openssl.git'
      - bash -c 'pushd openssl; git checkout OpenSSL_1_0_2-stable; popd'
      - bash -c 'pushd openssl; CC="/codefresh/volume/gpl-free-basebuild/musl-cross-make/output/bin/x86_64-linux-musl-gcc" CFLAGS="-fPIC -I/codefresh/volume/gpl-free-basebuild/target/sysroot/usr/local/include" CPPFLAGS="-fPIC" LDFLAGS="-fPIC" ./config --prefix="/codefresh/volume/gpl-free-basebuild/target/sysroot/usr/local" --openssldir="/codefresh/volume/gpl-free-basebuild/target/sysroot/usr/local" shared no-async; popd'
      - bash -c 'pushd openssl; make depend; make clean; make; make install; popd'

      # Python 2.7
      - bash -c 'unlink /usr/local/lib/libz.so.1; ln -s /codefresh/volume/gpl-free-basebuild/target/sysroot/lib/libz.so.1 /usr/local/lib/libz.so.1'
      - bash -c 'unlink /usr/include/zlib.h; ln -s /codefresh/volume/gpl-free-basebuild/target/sysroot/include/zlib.h /usr/include/zlib.h'
      - bash -c 'unlink /usr/local/lib/libcrypto.so.1.0.0; ln -s /codefresh/volume/gpl-free-basebuild/target/sysroot/usr/local/lib/libcrypto.so.1.0.0 /usr/local/lib/libcrypto.so.1.0.0'
      - bash -c 'unlink /usr/local/lib/libcrypto.so; ln -s /codefresh/volume/gpl-free-basebuild/target/sysroot/usr/local/lib/libcrypto.so.1.0.0 /usr/local/lib/libcrypto.so'
      - bash -c 'unlink /usr/local/lib/libssl.so; ln -s /codefresh/volume/gpl-free-basebuild/target/sysroot/usr/local/lib/libssl.so.1.0.0 /usr/local/lib/libssl.so'
      - bash -c 'unlink /usr/local/lib/libssl.so.1.0.0; ln -s /codefresh/volume/gpl-free-basebuild/target/sysroot/usr/local/lib/libssl.so.1.0.0 /usr/local/lib/libssl.so.1.0.0'
      - bash -c 'unlink /usr/include/openssl; ln -s /codefresh/volume/gpl-free-basebuild/target/sysroot/usr/local/include/openssl /usr/include/openssl'
      - bash -c 'export SYSROOT=/codefresh/volume/gpl-free-basebuild; pushd python/Python-2.7.13; CC="$SYSROOT/musl-cross-make/output/bin/x86_64-linux-musl-gcc" ./configure --host=x86_64-linux-musl --build=x86_64-linux-musl --prefix=$SYSROOT/target/sysroot/opt/python27 CFLAGS="-I$SYSROOT/kernel-headers/generic/include -I$SYSROOT/target/sysroot/usr/local/include -I$SYSROOT/ncurses/ -I$SYSROOT/ncurses/ncursesw -I$SYSROOT/target/sysroot/include -I$SYSROOT/musl/musl-1.1.20/include -I$SYSROOT/kernel-headers/x86_64/include" LDFLAGS="-idirafter -L$SYSROOT/target/sysroot/usr/local/lib -L$SYSROOT/target/sysroot/lib -L$SYSROOT/musl/musl-1.1.20/lib -L$SYSROOT/target/sysroot/lib -fPIC -lgcc"; make clean; make; make install; popd'

      # SCO System V tools
      - bash -c 'unlink /usr/bin/cc; ln -s /codefresh/volume/gpl-free-basebuild/target/sysroot/bin/musl-gcc /usr/bin/cc'
      - bash -c 'export SYSROOT=/codefresh/volume/gpl-free-basebuild; pushd heirloom-070715; make clean; make; make install; pushd /work/barbarians/base-image/target/sysroot; mkdir -p /codefresh/volume/gpl-free-basebuild/target/sysroot; cp -R ./usr/bin/* /codefresh/volume/gpl-free-basebuild/target/sysroot/usr/bin; cp -R ./usr/lib/* /codefresh/volume/gpl-free-basebuild/target/sysroot/usr/lib; popd; popd;'
      - bash -c 'unlink /work/barbarians/base-image/target/sysroot/usr/ucb/install'

      # SCO BOURNE shell
      - rm -f heirloom-sh-050706.tar.bz2
      - rm -rf heirloom-sh-050706
      - bash -c 'wget https://downloads.sourceforge.net/project/heirloom/heirloom-sh/050706/heirloom-sh-050706.tar.bz2'
      - tar xjf heirloom-sh-050706.tar.bz2
      - bash -c 'pushd heirloom-sh-050706; cat makefile | sed "s/#CC=diet gcc -Ifakewchar/CC=\/codefresh\/volume\/gpl-free-basebuild\/target\/sysroot\/bin\/musl-gcc/g" > makefile.2; cat makefile.2 | sed "s/ROOT=/ROOT=\/codefresh\/volume\/gpl-free-basebuild\/target\/sysroot/g" > makefile.3; mv makefile.3 makefile; make clean; make; cp sh /codefresh/volume/gpl-free-basebuild/target/sysroot/bin; popd'
      - bash -c 'pushd /codefresh/volume/gpl-free-basebuild/target/sysroot/bin; ln -s sh bash; popd'

      # Vim
      - rm -rf vim
      - git clone https://github.com/vim/vim.git
      - bash -c 'pushd vim; export SYSROOT=/codefresh/volume/gpl-free-basebuild; CFLAGS="-I$SYSROOT/target/sysroot/include" LDFLAGS="-L$SYSROOT/target/sysroot/lib" CC="$SYSROOT/target/sysroot/bin/musl-gcc -static" ./configure --with-tlib=ncurses --prefix=$SYSROOT/target/sysroot/usr; make clean; make; make install; popd'
      - bash -c 'pushd /codefresh/volume/gpl-free-basebuild/target/sysroot/usr/bin; ln -s vim vi; popd'

      # cleardown
      - rm -f heirloom-sh-050706.tar.bz2
      - rm -rf heirloom-sh-050706
      - rm -rf vim
      - rm -rf openssl
      - rm -rf libffi
      - rm -rf python
      - rm -rf mksh
      - rm -rf musl-cross-make

    entry_point:
      - /bin/bash

  build_image:
    type: build
    description: Building the image...
    image-name: dockerbarbarians/gpl-free-base-image
    tag: latest

  push_image:
    type: push
    description: Push image to repo
    candidate: '${{build_image}}'
    tag: latest
    credentials:
      username: '${{DOCKER_USER}}'
      password: '${{DOCKER_PASS}}'
